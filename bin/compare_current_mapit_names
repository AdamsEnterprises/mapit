#!/usr/bin/perl -w
#
# Now the IDs all match, comparing names should be a bit easier!

use strict;
use DBI;
use FindBin;
use lib "$FindBin::Bin/../commonlib/perllib";

use mySociety::Config;
mySociety::Config::set_file("$FindBin::Bin/../conf/general");

my $mapit_old = connect_to_mapit_database('mapit', 'cake');
my $mapit_new = connect_to_mapit_database('mapit-new', 'bitter');

my $sth = $mapit_old->prepare("SELECT id, name
    FROM area
        LEFT JOIN area_name ON area.id=area_name.area_id AND name_type='F'
    WHERE generation_high>=12
    ORDER BY id");
$sth->execute();
my (%lookup);
while (my @row = $sth->fetchrow_array) {
    my $name = $row[1];
    $name =~ s/St\. /St /;
    $lookup{$row[0]} = $name;
}
$mapit_old->disconnect();

$sth = $mapit_new->prepare("SELECT id, type, name
    FROM areas_area
    WHERE generation_high_id>=12
    ORDER BY id");
$sth->execute();
while (my ($id, $type, $new_name) = $sth->fetchrow_array) {
    my $old_name = $lookup{$id};
    print "No old name for $id ($new_name)\n", next unless $old_name;
    print "Differ: $id $type $old_name $new_name\n" if $old_name ne $new_name;
}

#$mapit_new->commit();
$mapit_new->disconnect();

# ---

sub connect_to_mapit_database {
    my ($db, $host) = @_;
    return DBI->connect("dbi:Pg:dbname=$db;host=$host.int.ukcod.org.uk;port=5434",
        $db, c(`/data/mysociety/bin/pgpw $db`), { RaiseError => 1, AutoCommit => 0 });
}

sub c { $_ = shift; chomp; return $_; }

